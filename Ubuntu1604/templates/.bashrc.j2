# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples
 
# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac
 
# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth
 
# append to the history file, don't overwrite it
shopt -s histappend
 
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000
 
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize
 
# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar
 
# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"
 
# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi
 
# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac
 
# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes
 
if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
                # We have color support; assume it's compliant with Ecma-48
                # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
                # a case would tend to support setf rather than setaf.)
                color_prompt=yes
    else
                color_prompt=
    fi
fi
 
if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt
 
# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac
 
# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'
 
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi
 
# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
 
# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
 
# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
 
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi
 
# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
 
# show current git branch
# Add git branch if its present to PS1
parse_git_branch() {
git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}
if [ "$color_prompt" = yes ]; then
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[01;31m\]$(parse_git_branch)\[\033[00m\]\$ '
else
PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w$(parse_git_branch)\$ '
fi
unset color_prompt force_color_prompt
 
 
# git password cache
git config --global credential.helper cache
git config --global credential.helper "cache --timeout=10000"
 
 
bind "set completion-ignore-case on"
 
export user="{{ user_name }}"
export JUMPNODE_SHARK_DEV="104.46.36.10"
export JUMPNODE_SHARK_QA="52.166.241.155"
export JUMPNODE_SHARK_PROD="40.68.170.78 "
export REVERSEPROXY_SHARK_DEV="40.115.22.105"
export REVERSEPROXY_SHARK_QA="13.69.86.175"
export REVERSEPROXY_SHARK_PROD="40.68.214.49"
export JUMPNODE_VERTICAL_DEV="40.113.106.205"
export JUMPNODE_VERTICAL_PDEV="52.166.202.95"
export JUMPNODE_VERTICAL_QA="40.68.221.197"
export JUMPNODE_VERTICAL_PROD="13.95.156.210"
 
alias sshJumpSharkDev="ssh ${user}@${JUMPNODE_SHARK_DEV}"
alias sshJumpSharkQA="ssh ${user}@${JUMPNODE_SHARK_QA}"
alias sshJumpSharkProd="ssh ${user}@${JUMPNODE_SHARK_PROD}"
alias sshReverseproxyDev="ssh ${user}@${REVERSEPROXY_SHARK_DEV}"
alias sshReverseproxyQA="ssh ${user}@${REVERSEPROXY_SHARK_QA}"
alias sshReverseproxyProd="ssh ${user}@${REVERSEPROXY_SHARK_PROD}"
alias sshJumpVerticalDev="ssh ${user}@${JUMPNODE_VERTICAL_DEV}"
alias sshJumpVerticalPDev="ssh ${user}@${JUMPNODE_VERTICAL_PDEV}"
alias sshJumpVerticalQA="ssh ${user}@${JUMPNODE_VERTICAL_QA}"
alias sshJumpVerticalProd="ssh ${user}@${JUMPNODE_VERTICAL_PROD}"
 
export userdir="/home/${user}"
 
# some often used directories
alias toSharkPlay="cd ~/workspace/eon/infrastructure/chef-repo-espp-shark-playground"
alias toSharkDev="cd ~/workspace/eon/infrastructure/chef-repo-espp-shark-dev"
alias toSharkPDev="cd ~/workspace/eon/infrastructure/chef-repo-espp-shark-pdev"
alias toSharkQA="cd ~/workspace/eon/infrastructure/chef-repo-espp-shark-qa"
alias toSharkProd="cd ~/workspace/eon/infrastructure/chef-repo-espp-shark-production"
alias toArmTemplates="cd ~/workspace/eon/infrastructure/espp-arm-templates"
alias toNetworkArm="cd /home/knappster/workspace/eon/infrastructure/espp-network-arm"
alias toCookbooks="cd ~/workspace/eon/cookbooks"
 
 
# some often used commands
alias gs="git status"
alias gd="git diff"
alias ghist="git log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short"
gitpull() {
  git pull origin $1
}
alias gpull=gitpull
gitbranch() {
  git branch $1 $2
}
alias gb=gitbranch
gitpushorigin() {
  git push origin $1
}
alias gp=gitpushorigin
gitmerge() {
  git merge $1
}
alias gm=gitmerge
gitcheckout() {
  git checkout $1 $2
}
alias gc=gitcheckout
gitcommit() {
  git add . --all
  git commit -m "$1"
}
alias gcomm=gitcommit
gitdeletetagremote() {
  git tag -d $1
  git push origin :refs/tags/$1
}
alias gtagdel=gitdeletetagremote
gitflowfeaturestart() {
  git flow feature start $1
}
alias gfeatstart=gitflowfeaturestart
gitflowfeaturefinish() {
  git flow feature finish $1
}
alias gfeatfinish=gitflowfeaturefinish
gitflowreleasestart() {
  git flow release start $1
}
alias grelstart=gitflowreleasestart
gitflowreleasefinish() {
  git flow release finish $1
}
alias grelfinish=gitflowreleasefinish
gitflowhotfixstart() {
  git flow hotfix start $1
}
alias ghotfixstart=gitflowhotfixstart
gitflowhotfixfinish() {
  git flow hotfix finish $1
}
alias ghotfixfinish=gitflowhotfixfinish
alias thorupload="chef exec thor role:upload"
thorroleupgrade() {
  chef exec thor role:upgrade $1 $2 $3 $4
}
alias thorupgrade=thorroleupgrade
berksupload() {
  sudo berks install && sudo berks upload $1
}
berksupdate() {
  sudo berks update && sudo berks upload $1
}
alias bupload=berksupload
alias bupdate=berksupdate
berksapply() {
  berks apply $(pwd | rev | cut -d'/' -f1 | rev)
}
alias bapply=berksapply
knifedel() {
  echo "Y"|knife client delete "$1" && echo "Y"|knife node delete "$1"
}
alias knifedel=knifedel
knifeupload() {
  knife upload $1 $2 $3 $4 $5 $6 $7
}
alias kup=knifeupload
knifestatus() {
  knife status $1
}
alias ks=knifestatus
knifedatabagshow() {
  knife data bag show $1 $2 $3
}
alias kshow=knifedatabagshow
knifedatabagedit() {
  knife data bag edit $1 $2 $3
}
alias kedit=knifedatabagedit
 
 
# allow ssh agent forwarding
ssh-add ~/.ssh/id_rsa
 